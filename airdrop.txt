airdrop合约:
(1) view 方法
get_token_list    //获取合约已注册的token
return [{
    spec: String,         //不重要
    name: String,        // token名字
    symbol: String,     // 简写
    icon: Option<String>,  //option可能为Null
    reference: Option<String>,           //不重要
    reference_hash: Option<Base64VecU8>,//不重要
    decimals: u8,    //最小单位
}]

get_creator_token_list(creator: String)   //获取creator已注册的token
return [{
    symbol: String,
    token_id: String    //token的合约地址
}]

get_creator_tasks(creator: String)  //获取creator创建的所有airdrop tasks
return [{
    total_count: u32,     //这个task对应的红包数量
    start_time: U64,     //空投开始时间，大写U返回字符串
    end_time: U64,       //空投结束时间
    token_amount: U128,  //空投token量， 需要除以decimal
    token_symbol: String, //token简写
    token_decimal: u8,   //最小单位
    claimed_count: u32,  //已领取数量
}]

get_creator_balance(    //获取creator的token或者near的余额
    creator: String,   // 要查询的creator
    token_id: Option<String>   //如果要查的是near则不填，查某种token需要此字段
    )
return u128

get_claim_info(       //当user要领取空投时先获取这些信息
    creator: String, 
    index:u32         // 空投id
    )
return {
    nonce: U64,       // sign transaction所需的nonce, 大写U意思是返回的为字符串
    private_key: String   //sign transaction所需的私钥
}

(2) call方法
add_creator_token(token_id: String)     // 当合约没有creator的token时调用此方法
deposit = 0.0125 * 10^24                       // 转账数额，用于注册token
gas = 300000000000000
return null

deposit(amount:U128) //充值near到合约
deposit = amount
gas = 300000000000000
return null

add_task(                     //creator创建空投任务
    total_count: u32,           // 一共有多少个用户能获取空投
    amount_per_account: U128,   // 每个user能获取的空投数量
    deadline: U64
    token_id: String,        // token的合约地址
    private_key: String,        // 由前端创建的私钥，用near-seed-phrase的github库
    public_key: Vec<u8>       // 由私钥生成的公钥， 也是用near-seed-phrase, 是一个32个byte的数组，最后提交前需要在第一个位置添加一个0变成33个byte
    )
deposit = 30000000000000000000000 * total_count
gas =     300000000000000
return null

claim(                     // user获取空投
    creator: String,      // 指定是哪个creator创建的空投
    index: u32,              // 指定空投的index
    receiver: String      // 空投领取人
    )
deposit = 0
gas = 300000000000000
return null
调用claim方法时，需要用之前get_claim_info所获取的信息创建一个新的near wallet context, 钱包地址使用此合约地址，
然后添加private_key和nonce才能领取
