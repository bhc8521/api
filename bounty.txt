bounty合约:  //bounty.bhc8521.testnet
(1) view 方法

get_creator_token_list(creator: String)   //获取creator已有的token
return 
[String]      //币的账户地址


get_creator_tasks(creator: String, public_keys: [String])  //批量获取空投状态
return [u32]

get_task_estimate_cost(total_count: Number)  //预估add_task所需deposit
return U128

get_creator_balance(    //获取creator的token或者near的余额
    creator: String,   // 要查询的creator
    token_id: Option<String>   //如果要查的是near则不填，查某种token需要此字段
    )
return u128

(2) call方法
add_token(token_id: String)     // 当合约没有creator的token时调用此方法
deposit = 0.0125 * 10^24                       // 转账数额，用于注册token
gas = 300000000000000
return null

deposit(amount:U128) //充值near到合约
deposit = amount
gas = 300000000000000
return null

add_task(                     //creator创建空投任务
    total_count: u32,           // 一共有多少个用户能获取空投
    amount_per_account: U128,   // 每个user能获取的空投数量
    start_time: U64,
    end_time: U64,
    token_id: String,        // token的合约地址
    public_key: String      // 由前端创建的一对私钥和公钥，用near-seed-phrase的github库 由私钥生成的公钥
    imgs:[String],
    text: String
    )
deposit = 由get_task_estimate_cost获取
gas =     300000000000000
return null

claim(                     // user获取空投
    creator: String,      // 指定是哪个creator创建的空投
    index: u32,              // 指定空投的index
    receiver: String      // 空投领取人
    )
deposit = 0
gas = 300000000000000
return null
调用claim方法时，需要用之前get_claim_info所获取的信息创建一个新的near wallet context, 钱包地址使用此合约地址，
然后添加private_key和nonce才能领取
